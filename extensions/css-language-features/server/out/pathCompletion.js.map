{"version":3,"file":"pathCompletion.js","sourceRoot":"../src","sources":["pathCompletion.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,6BAA6B;AAC7B,yBAAyB;AACzB,2CAA6B;AAE7B,6EAA0I;AAI1I,6CAAuD;AAEvD,SAAgB,4BAA4B,CAC3C,QAAsB,EACtB,gBAAmC,EACnC,MAAsB;IAEtB,OAAO;QACN,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;YACvD,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,EAAE;gBACxD,IAAI,SAAS,KAAK,GAAG,IAAI,SAAS,KAAK,IAAI,EAAE;oBAC5C,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC3B;gBACD,OAAO;aACP;YAED,IAAI,WAAW,GAAG,sBAAsB,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YAChG,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QACD,eAAe,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE;YACnD,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;YACzC,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,gBAAgB,CAAC,EAAE;gBACzD,IAAI,SAAS,KAAK,GAAG,IAAI,SAAS,KAAK,IAAI,EAAE;oBAC5C,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC3B;gBACD,OAAO;aACP;YAED,IAAI,WAAW,GAAG,sBAAsB,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YAEjG,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,EAAE;gBACnC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACvB,IAAI,oBAAU,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,kBAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;wBAC3D,IAAI,CAAC,CAAC,QAAQ,EAAE;4BACf,CAAC,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC1C;6BAAM;4BACN,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC/B;qBACD;gBACF,CAAC,CAAC,CAAC;aACH;YAED,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;KACD,CAAC;AACH,CAAC;AA5CD,oEA4CC;AAED,SAAS,sBAAsB,CAAC,SAAiB,EAAE,QAAkB,EAAE,KAAY,EAAE,QAAsB,EAAE,gBAAmC;IAC/I,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;IACzC,MAAM,aAAa,GAAG,oBAAU,CAAC,SAAS,EAAE,GAAG,CAAC,IAAI,oBAAU,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC/E,MAAM,iBAAiB,GAAG,aAAa;QACtC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAClE,MAAM,aAAa,GAAG,oBAAoB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IACvE,MAAM,gBAAgB,GAAG,oBAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IAExD,MAAM,KAAK,GAAG,YAAY,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,aAAa,CAAC;SAC5E,MAAM,CAAC,CAAC,CAAC,EAAE;QACX,6BAA6B;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,gBAAgB,CAAC;IACtE,CAAC,CAAC;SACD,MAAM,CAAC,CAAC,CAAC,EAAE;QACX,oCAAoC;QACpC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;IACrB,CAAC,CAAC,CAAC;IAEJ,MAAM,cAAc,GAAG,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACxE,MAAM,YAAY,GAAG,kBAAkB,CAAC,iBAAiB,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;IAEtF,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;IACtE,OAAO,WAAW,CAAC;AACpB,CAAC;AAED,SAAS,sBAAsB,CAAC,SAAiB,EAAE,gBAAmC;IACrF,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;IACzC,IAAI,SAAS,KAAK,GAAG,IAAI,SAAS,KAAK,IAAI,EAAE;QAC5C,OAAO,KAAK,CAAC;KACb;IAED,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;QACvD,OAAO,KAAK,CAAC;KACb;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAED,SAAS,WAAW,CAAC,SAAiB;IACrC,IAAI,oBAAU,CAAC,SAAS,EAAE,GAAG,CAAC,IAAI,oBAAU,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE;QAC7D,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAC9B;SAAM;QACN,OAAO,SAAS,CAAC;KACjB;AACF,CAAC;AAED;;GAEG;AACH,SAAS,YAAY,CAAC,iBAAyB,EAAE,eAAuB,EAAE,IAAa;IACtF,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC5D,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAE9E,MAAM,eAAe,GAAG,oBAAU,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;IAC3D,IAAI,SAAiB,CAAC;IACtB,IAAI,eAAe,EAAE;QACpB,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,EAAE,CAAC;SACV;QACD,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,GAAG,oBAAoB,CAAC,CAAC;KAC3D;SAAM;QACN,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,EAAE,oBAAoB,CAAC,CAAC;KACtE;IAED,IAAI;QACH,OAAO,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACxC,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACvC,CAAC,CAAC,CAAC,GAAG,GAAG;gBACT,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;KACH;IAAC,OAAO,CAAC,EAAE;QACX,OAAO,EAAE,CAAC;KACV;AACF,CAAC;AAED,MAAM,KAAK,GAAG,CAAC,CAAS,EAAE,EAAE;IAC3B,IAAI;QACH,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;KACpC;IAAC,OAAO,CAAC,EAAE;QACX,OAAO,KAAK,CAAC;KACb;AACF,CAAC,CAAC;AAEF,SAAS,kBAAkB,CAAC,iBAAyB,EAAE,SAAiB,EAAE,cAAqB;IAC9F,IAAI,YAAmB,CAAC;IACxB,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC5D,IAAI,gBAAgB,KAAK,CAAC,CAAC,EAAE;QAC5B,YAAY,GAAG,cAAc,CAAC;KAC9B;SAAM;QACN,iGAAiG;QACjG,yFAAyF;QACzF,MAAM,mBAAmB,GAAG,SAAS,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;QAClE,MAAM,QAAQ,GAAG,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAChF,yCAAyC;QACzC,MAAM,eAAe,GAAG,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACzD,IAAI,MAAM,CAAC;QACX,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;YAC3B,MAAM,GAAG,aAAa,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;SAClD;aAAM;YACN,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC;SAC5B;QACD,YAAY,GAAG,mCAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;KAC9C;IAED,OAAO,YAAY,CAAC;AACrB,CAAC;AAED,SAAS,gBAAgB,CAAC,CAAS,EAAE,YAAmB;IACvD,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;IAEtC,IAAI,KAAK,EAAE;QACV,OAAO;YACN,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,EAAE,gDAAkB,CAAC,MAAM;YAC/B,QAAQ,EAAE,sCAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;YACvD,OAAO,EAAE;gBACR,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,8BAA8B;aACvC;SACD,CAAC;KACF;SAAM;QACN,OAAO;YACN,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,EAAE,gDAAkB,CAAC,IAAI;YAC7B,QAAQ,EAAE,sCAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;SACvD,CAAC;KACF;AACF,CAAC;AAED,yCAAyC;AACzC,SAAS,UAAU,CAAC,CAAS;IAC5B,OAAO,CAAC,CAAC,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,oBAAoB,CAAC,SAAuB,EAAE,gBAAmC;IACzF,KAAK,MAAM,MAAM,IAAI,gBAAgB,EAAE;QACtC,IAAI,oBAAU,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;SAClD;KACD;IACD,OAAO,SAAS,CAAC;AAClB,CAAC;AAED,SAAS,aAAa,CAAC,GAAa,EAAE,MAAc;IACnD,OAAO,sCAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;AAC1D,CAAC;AACD,SAAS,UAAU,CAAC,KAAY,EAAE,WAAmB,EAAE,SAAiB;IACvE,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IACtD,MAAM,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAChD,OAAO,mCAAK,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACjC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport URI from 'vscode-uri';\n\nimport { TextDocument, CompletionList, CompletionItemKind, CompletionItem, TextEdit, Range, Position } from 'vscode-languageserver-types';\nimport { WorkspaceFolder } from 'vscode-languageserver';\nimport { ICompletionParticipant } from 'vscode-css-languageservice';\n\nimport { startsWith, endsWith } from './utils/strings';\n\nexport function getPathCompletionParticipant(\n\tdocument: TextDocument,\n\tworkspaceFolders: WorkspaceFolder[],\n\tresult: CompletionList\n): ICompletionParticipant {\n\treturn {\n\t\tonCssURILiteralValue: ({ position, range, uriValue }) => {\n\t\t\tconst fullValue = stripQuotes(uriValue);\n\t\t\tif (!shouldDoPathCompletion(uriValue, workspaceFolders)) {\n\t\t\t\tif (fullValue === '.' || fullValue === '..') {\n\t\t\t\t\tresult.isIncomplete = true;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet suggestions = providePathSuggestions(uriValue, position, range, document, workspaceFolders);\n\t\t\tresult.items = [...suggestions, ...result.items];\n\t\t},\n\t\tonCssImportPath: ({ position, range, pathValue }) => {\n\t\t\tconst fullValue = stripQuotes(pathValue);\n\t\t\tif (!shouldDoPathCompletion(pathValue, workspaceFolders)) {\n\t\t\t\tif (fullValue === '.' || fullValue === '..') {\n\t\t\t\t\tresult.isIncomplete = true;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet suggestions = providePathSuggestions(pathValue, position, range, document, workspaceFolders);\n\n\t\t\tif (document.languageId === 'scss') {\n\t\t\t\tsuggestions.forEach(s => {\n\t\t\t\t\tif (startsWith(s.label, '_') && endsWith(s.label, '.scss')) {\n\t\t\t\t\t\tif (s.textEdit) {\n\t\t\t\t\t\t\ts.textEdit.newText = s.label.slice(1, -5);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts.label = s.label.slice(1, -5);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresult.items = [...suggestions, ...result.items];\n\t\t}\n\t};\n}\n\nfunction providePathSuggestions(pathValue: string, position: Position, range: Range, document: TextDocument, workspaceFolders: WorkspaceFolder[]) {\n\tconst fullValue = stripQuotes(pathValue);\n\tconst isValueQuoted = startsWith(pathValue, `'`) || startsWith(pathValue, `\"`);\n\tconst valueBeforeCursor = isValueQuoted\n\t\t? fullValue.slice(0, position.character - (range.start.character + 1))\n\t\t: fullValue.slice(0, position.character - range.start.character);\n\tconst workspaceRoot = resolveWorkspaceRoot(document, workspaceFolders);\n\tconst currentDocFsPath = URI.parse(document.uri).fsPath;\n\n\tconst paths = providePaths(valueBeforeCursor, currentDocFsPath, workspaceRoot)\n\t\t.filter(p => {\n\t\t\t// Exclude current doc's path\n\t\t\treturn path.resolve(currentDocFsPath, '../', p) !== currentDocFsPath;\n\t\t})\n\t\t.filter(p => {\n\t\t\t// Exclude paths that start with `.`\n\t\t\treturn p[0] !== '.';\n\t\t});\n\n\tconst fullValueRange = isValueQuoted ? shiftRange(range, 1, -1) : range;\n\tconst replaceRange = pathToReplaceRange(valueBeforeCursor, fullValue, fullValueRange);\n\n\tconst suggestions = paths.map(p => pathToSuggestion(p, replaceRange));\n\treturn suggestions;\n}\n\nfunction shouldDoPathCompletion(pathValue: string, workspaceFolders: WorkspaceFolder[]): boolean {\n\tconst fullValue = stripQuotes(pathValue);\n\tif (fullValue === '.' || fullValue === '..') {\n\t\treturn false;\n\t}\n\n\tif (!workspaceFolders || workspaceFolders.length === 0) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction stripQuotes(fullValue: string) {\n\tif (startsWith(fullValue, `'`) || startsWith(fullValue, `\"`)) {\n\t\treturn fullValue.slice(1, -1);\n\t} else {\n\t\treturn fullValue;\n\t}\n}\n\n/**\n * Get a list of path suggestions. Folder suggestions are suffixed with a slash.\n */\nfunction providePaths(valueBeforeCursor: string, activeDocFsPath: string, root?: string): string[] {\n\tconst lastIndexOfSlash = valueBeforeCursor.lastIndexOf('/');\n\tconst valueBeforeLastSlash = valueBeforeCursor.slice(0, lastIndexOfSlash + 1);\n\n\tconst startsWithSlash = startsWith(valueBeforeCursor, '/');\n\tlet parentDir: string;\n\tif (startsWithSlash) {\n\t\tif (!root) {\n\t\t\treturn [];\n\t\t}\n\t\tparentDir = path.resolve(root, '.' + valueBeforeLastSlash);\n\t} else {\n\t\tparentDir = path.resolve(activeDocFsPath, '..', valueBeforeLastSlash);\n\t}\n\n\ttry {\n\t\treturn fs.readdirSync(parentDir).map(f => {\n\t\t\treturn isDir(path.resolve(parentDir, f))\n\t\t\t\t? f + '/'\n\t\t\t\t: f;\n\t\t});\n\t} catch (e) {\n\t\treturn [];\n\t}\n}\n\nconst isDir = (p: string) => {\n\ttry {\n\t\treturn fs.statSync(p).isDirectory();\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nfunction pathToReplaceRange(valueBeforeCursor: string, fullValue: string, fullValueRange: Range) {\n\tlet replaceRange: Range;\n\tconst lastIndexOfSlash = valueBeforeCursor.lastIndexOf('/');\n\tif (lastIndexOfSlash === -1) {\n\t\treplaceRange = fullValueRange;\n\t} else {\n\t\t// For cases where cursor is in the middle of attribute value, like <script src=\"./s|rc/test.js\">\n\t\t// Find the last slash before cursor, and calculate the start of replace range from there\n\t\tconst valueAfterLastSlash = fullValue.slice(lastIndexOfSlash + 1);\n\t\tconst startPos = shiftPosition(fullValueRange.end, -valueAfterLastSlash.length);\n\t\t// If whitespace exists, replace until it\n\t\tconst whiteSpaceIndex = valueAfterLastSlash.indexOf(' ');\n\t\tlet endPos;\n\t\tif (whiteSpaceIndex !== -1) {\n\t\t\tendPos = shiftPosition(startPos, whiteSpaceIndex);\n\t\t} else {\n\t\t\tendPos = fullValueRange.end;\n\t\t}\n\t\treplaceRange = Range.create(startPos, endPos);\n\t}\n\n\treturn replaceRange;\n}\n\nfunction pathToSuggestion(p: string, replaceRange: Range): CompletionItem {\n\tconst isDir = p[p.length - 1] === '/';\n\n\tif (isDir) {\n\t\treturn {\n\t\t\tlabel: escapePath(p),\n\t\t\tkind: CompletionItemKind.Folder,\n\t\t\ttextEdit: TextEdit.replace(replaceRange, escapePath(p)),\n\t\t\tcommand: {\n\t\t\t\ttitle: 'Suggest',\n\t\t\t\tcommand: 'editor.action.triggerSuggest'\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tlabel: escapePath(p),\n\t\t\tkind: CompletionItemKind.File,\n\t\t\ttextEdit: TextEdit.replace(replaceRange, escapePath(p))\n\t\t};\n\t}\n}\n\n// Escape https://www.w3.org/TR/CSS1/#url\nfunction escapePath(p: string) {\n\treturn p.replace(/(\\s|\\(|\\)|,|\"|')/g, '\\\\$1');\n}\n\nfunction resolveWorkspaceRoot(activeDoc: TextDocument, workspaceFolders: WorkspaceFolder[]): string | undefined {\n\tfor (const folder of workspaceFolders) {\n\t\tif (startsWith(activeDoc.uri, folder.uri)) {\n\t\t\treturn path.resolve(URI.parse(folder.uri).fsPath);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction shiftPosition(pos: Position, offset: number): Position {\n\treturn Position.create(pos.line, pos.character + offset);\n}\nfunction shiftRange(range: Range, startOffset: number, endOffset: number): Range {\n\tconst start = shiftPosition(range.start, startOffset);\n\tconst end = shiftPosition(range.end, endOffset);\n\treturn Range.create(start, end);\n}\n"]}
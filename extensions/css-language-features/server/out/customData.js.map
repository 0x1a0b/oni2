{"version":3,"file":"customData.js","sourceRoot":"../src","sources":["customData.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,yBAAyB;AAEzB,SAAgB,gBAAgB,CAAC,SAAmB;IACnD,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;QACnC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;YACrB,MAAM,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;YACvD,OAAO;gBACN,iBAAiB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;gBAC9C,mBAAmB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE;gBAClD,oBAAoB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,IAAI,EAAE;gBACpD,qBAAqB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,IAAI,EAAE;aACtD,CAAC;SACF;aAAM;YACN,OAAO;gBACN,iBAAiB,EAAE,GAAG,EAAE,CAAC,EAAE;gBAC3B,mBAAmB,EAAE,GAAG,EAAE,CAAC,EAAE;gBAC7B,oBAAoB,EAAE,GAAG,EAAE,CAAC,EAAE;gBAC9B,qBAAqB,EAAE,GAAG,EAAE,CAAC,EAAE;aAC/B,CAAC;SACF;IACF,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AAClB,CAAC;AArBD,4CAqBC;AAED,SAAS,YAAY,CAAC,MAAc;IACnC,IAAI,OAAY,CAAC;IAEjB,IAAI;QACH,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC7B;IAAC,OAAO,GAAG,EAAE;QACb,OAAO;YACN,OAAO,EAAE,CAAC;SACV,CAAC;KACF;IAED,OAAO;QACN,OAAO,EAAE,CAAC;QACV,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,EAAE;QACpC,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,EAAE;QACxC,aAAa,EAAE,OAAO,CAAC,aAAa,IAAI,EAAE;QAC1C,cAAc,EAAE,OAAO,CAAC,cAAc,IAAI,EAAE;KAC5C,CAAC;AACH,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CSSDataV1, ICSSDataProvider } from 'vscode-css-languageservice';\nimport * as fs from 'fs';\n\nexport function getDataProviders(dataPaths: string[]): ICSSDataProvider[] {\n\tconst providers = dataPaths.map(p => {\n\t\tif (fs.existsSync(p)) {\n\t\t\tconst data = parseCSSData(fs.readFileSync(p, 'utf-8'));\n\t\t\treturn {\n\t\t\t\tprovideProperties: () => data.properties || [],\n\t\t\t\tprovideAtDirectives: () => data.atDirectives || [],\n\t\t\t\tprovidePseudoClasses: () => data.pseudoClasses || [],\n\t\t\t\tprovidePseudoElements: () => data.pseudoElements || []\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tprovideProperties: () => [],\n\t\t\t\tprovideAtDirectives: () => [],\n\t\t\t\tprovidePseudoClasses: () => [],\n\t\t\t\tprovidePseudoElements: () => []\n\t\t\t};\n\t\t}\n\t});\n\n\treturn providers;\n}\n\nfunction parseCSSData(source: string): CSSDataV1 {\n\tlet rawData: any;\n\n\ttry {\n\t\trawData = JSON.parse(source);\n\t} catch (err) {\n\t\treturn {\n\t\t\tversion: 1\n\t\t};\n\t}\n\n\treturn {\n\t\tversion: 1,\n\t\tproperties: rawData.properties || [],\n\t\tatDirectives: rawData.atDirectives || [],\n\t\tpseudoClasses: rawData.pseudoClasses || [],\n\t\tpseudoElements: rawData.pseudoElements || []\n\t};\n}\n"]}
{"version":3,"file":"runner.js","sourceRoot":"../../src","sources":["utils/runner.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,iEAAqF;AAErF,SAAgB,WAAW,CAAC,OAAe,EAAE,GAAQ;IACpD,IAAI,GAAG,YAAY,KAAK,EAAE;QACzB,IAAI,KAAK,GAAU,GAAG,CAAC;QACvB,OAAO,GAAG,OAAO,KAAK,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC;KACtD;SAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QACnC,OAAO,GAAG,OAAO,KAAK,GAAG,EAAE,CAAC;KAC5B;SAAM,IAAI,GAAG,EAAE;QACf,OAAO,GAAG,OAAO,KAAK,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;KACvC;IACD,OAAO,OAAO,CAAC;AAChB,CAAC;AAVD,kCAUC;AAED,SAAgB,OAAO,CAAO,IAAa,EAAE,QAAW,EAAE,YAAoB,EAAE,KAAwB;IACvG,OAAO,IAAI,OAAO,CAAuB,CAAC,OAAO,EAAE,EAAE;QACpD,YAAY,CAAC,GAAG,EAAE;YACjB,IAAI,KAAK,CAAC,uBAAuB,EAAE;gBAClC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;aACvB;iBAAM;gBACN,IAAI;oBACH,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;oBACpB,IAAI,KAAK,CAAC,uBAAuB,EAAE;wBAClC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;wBACvB,OAAO;qBACP;yBAAM;wBACN,OAAO,CAAC,MAAM,CAAC,CAAC;qBAChB;iBAED;gBAAC,OAAO,CAAC,EAAE;oBACX,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC5C,OAAO,CAAC,QAAQ,CAAC,CAAC;iBAClB;aACD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC;AAtBD,0BAsBC;AAED,SAAS,WAAW;IACnB,OAAO,IAAI,qCAAa,CAAI,kCAAU,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;AAC/E,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResponseError, ErrorCodes, CancellationToken } from 'vscode-languageserver';\n\nexport function formatError(message: string, err: any): string {\n\tif (err instanceof Error) {\n\t\tlet error = <Error>err;\n\t\treturn `${message}: ${error.message}\\n${error.stack}`;\n\t} else if (typeof err === 'string') {\n\t\treturn `${message}: ${err}`;\n\t} else if (err) {\n\t\treturn `${message}: ${err.toString()}`;\n\t}\n\treturn message;\n}\n\nexport function runSafe<T, E>(func: () => T, errorVal: T, errorMessage: string, token: CancellationToken): Thenable<T | ResponseError<E>> {\n\treturn new Promise<T | ResponseError<E>>((resolve) => {\n\t\tsetImmediate(() => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tresolve(cancelValue());\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tlet result = func();\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tresolve(cancelValue());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(formatError(errorMessage, e));\n\t\t\t\t\tresolve(errorVal);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction cancelValue<E>() {\n\treturn new ResponseError<E>(ErrorCodes.RequestCancelled, 'Request cancelled');\n}\n"]}
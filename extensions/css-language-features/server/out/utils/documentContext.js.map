{"version":3,"file":"documentContext.js","sourceRoot":"../../src","sources":["utils/documentContext.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,8CAAwD;AACxD,2BAA2B;AAG3B,SAAgB,kBAAkB,CAAC,WAAmB,EAAE,gBAAmC;IAC1F,SAAS,aAAa;QACrB,KAAK,IAAI,MAAM,IAAI,gBAAgB,EAAE;YACpC,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;YAC3B,IAAI,CAAC,kBAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE;gBAC9B,SAAS,GAAG,SAAS,GAAG,GAAG,CAAC;aAC5B;YACD,IAAI,oBAAU,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE;gBACvC,OAAO,SAAS,CAAC;aACjB;SACD;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,OAAO;QACN,gBAAgB,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,WAAW,EAAE,EAAE;YAC7C,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,EAAE,6DAA6D;gBAClF,IAAI,oBAAU,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;oBAChC,IAAI,SAAS,GAAG,aAAa,EAAE,CAAC;oBAChC,IAAI,SAAS,EAAE;wBACd,OAAO,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBACjC;iBACD;aACD;YACD,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/B,CAAC;KACD,CAAC;AACH,CAAC;AA3BD,gDA2BC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DocumentContext } from 'vscode-css-languageservice';\nimport { endsWith, startsWith } from '../utils/strings';\nimport * as url from 'url';\nimport { WorkspaceFolder } from 'vscode-languageserver';\n\nexport function getDocumentContext(documentUri: string, workspaceFolders: WorkspaceFolder[]): DocumentContext {\n\tfunction getRootFolder(): string | undefined {\n\t\tfor (let folder of workspaceFolders) {\n\t\t\tlet folderURI = folder.uri;\n\t\t\tif (!endsWith(folderURI, '/')) {\n\t\t\t\tfolderURI = folderURI + '/';\n\t\t\t}\n\t\t\tif (startsWith(documentUri, folderURI)) {\n\t\t\t\treturn folderURI;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tresolveReference: (ref, base = documentUri) => {\n\t\t\tif (ref[0] === '/') { // resolve absolute path against the current workspace folder\n\t\t\t\tif (startsWith(base, 'file://')) {\n\t\t\t\t\tlet folderUri = getRootFolder();\n\t\t\t\t\tif (folderUri) {\n\t\t\t\t\t\treturn folderUri + ref.substr(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn url.resolve(base, ref);\n\t\t},\n\t};\n}\n\n"]}